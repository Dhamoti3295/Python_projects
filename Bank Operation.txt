import sqlite3
import random

# Connect to the SQLite database (this will create the database file if it doesn't exist)
conn = sqlite3.connect('bank_database.db')
cursor = conn.cursor()

# Create a table (if it doesn't exist already)
cursor.execute('''
    CREATE TABLE IF NOT EXISTS accounts (
        id INTEGER PRIMARY KEY,
        name TEXT,
        user_id INTEGER,
        address TEXT,
        mobile_num INTEGER,
        aadhar INTEGER,
        pan TEXT,
        pin INTEGER,
        account_number INTEGER,
        balance INTEGER
    )
''')
conn.commit()

def welcome_note():
    print('*' * 50)
    print("Welcome to KAILASA BANK")
    print('*' * 50)

def is_duplicate_aadhar(new_aadhar):
    cursor.execute("SELECT COUNT(*) FROM accounts WHERE aadhar = ?", (new_aadhar,))
    return cursor.fetchone()[0] > 0

def is_duplicate_pan(new_pan):
    cursor.execute("SELECT COUNT(*) FROM accounts WHERE pan = ?", (new_pan,))
    return cursor.fetchone()[0] > 0

def create_account():
    account_details = {}

    account_details["name"] = input("Enter Your Name, As per your ID proof: ")
    account_details["user_id"] = random.randint(10000, 99999)
    account_details["address"] = input("Enter Your Address: ")
    account_details["mobile_num"] = int(input("Enter the Valid Mobile Number: "))

    while True:
        try:
            new_aadhar = int(input("Enter Your AADHAR NUMBER: "))
            if is_duplicate_aadhar(new_aadhar):
                print("Aadhar number already exists. Please enter a unique Aadhar number.")
            else:
                account_details["aadhar"] = new_aadhar
                break
        except ValueError:
            print("Please enter a valid number for AADHAR NUMBER.")

    while True:
        new_pan = input("Enter the PAN NUMBER: ")
        if is_duplicate_pan(new_pan):
            print("PAN number already exists. Please enter a unique PAN number.")
        else:
            account_details["pan"] = new_pan
            break

    while True:
        try:
            account_details["pin"] = int(input("Enter your PIN: "))
            break
        except ValueError:
            print("Please enter a valid number for PIN.")

    while True:
        try:
            account_details["re_pin"] = int(input("Re-enter your PIN: "))
            break
        except ValueError:
            print("Please enter a valid number for Re-enter PIN.")

    account_details["account_number"] = random.randint(100000, 999999)

    while True:
        try:
            account_details["balance"] = int(input("Enter the Amount (Above Rs. 500): "))
            if account_details["balance"] >= 500:
                print("Deposit is successful.")
                break
            else:
                print("Please deposit above Rs. 500.")
        except ValueError:
            print("Please enter a valid number for the amount.")

    cursor.execute('''
        INSERT INTO accounts (name, user_id, address, mobile_num, aadhar, pan, pin, account_number, balance)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', (account_details["name"], account_details["user_id"], account_details["address"],
          account_details["mobile_num"], account_details["aadhar"], account_details["pan"],
          account_details["pin"], account_details["account_number"], account_details["balance"]))

    conn.commit()

    print('''Thanks for using KAILASA BANK
    Your Account Details are''')

    print("ACCOUNT HOLDER NAME:", account_details["name"])
    print("ACCOUNT NUMBER:", account_details["account_number"])
    print("ACCOUNT USER ID IS:", account_details["user_id"])
    print("ADDRESS:", account_details["address"])
    print("MOBILE NUMBER:", account_details["mobile_num"])
    print("AADHAR NUMBER:", account_details["aadhar"])
    print("PAN NUMBER:", account_details["pan"])
    print("PIN:", account_details["pin"])
    print("Account Balance IS:", account_details["balance"])
    print('''Your Account created successfully. Please login again. Do not share your PIN with anyone.''')

def print_account_details(account):
    print("ACCOUNT DETAILS:")
    print("ACCOUNT HOLDER NAME:", account["name"])
    print("Account Number:", account["account_number"])
    print("Address:", account["address"])
    print("User ID:", account["user_id"])
    print("PIN:", account["pin"])
    print("Mobile Number:", account["mobile_num"])
    print("AADHAR NUMBER:", account["aadhar"])
    print("PAN NUMBER:", account["pan"])
    print("Balance:", account["balance"])

def login():
    user_id = int(input("Enter your user ID: "))
    pin = int(input("Enter your PIN: "))

    cursor.execute("SELECT * FROM accounts WHERE user_id = ? AND pin = ?", (user_id, pin))
    account = cursor.fetchone()

    if account:
        print("Login successful!")
        return {
            "name": account[1],
            "account_number": account[8],
            "user_id": account[2],
            "address": account[3],
            "pin": account[7],
            "mobile_num": account[4],
            "aadhar": account[5],
            "pan": account[6],
            "balance": account[9]
        }
    else:
        print("Invalid user ID or PIN. Please try again.")
        return None

def banking(account):
    while True:
        print("Choose a transaction type:")
        print("1. Deposit")
        print("2. Withdraw")
        print("3. Back to the main menu")
        try:
            banking_type = int(input("Enter your choice: "))
            if 1 <= banking_type <= 3:
                if banking_type == 1:
                    amount = int(input("Enter the deposit amount: "))
                    account["balance"] += amount
                    cursor.execute("UPDATE accounts SET balance = ? WHERE user_id = ?", (account["balance"], account["user_id"]))
                    conn.commit()
                    print("Deposit successful. Updated balance:", account["balance"])
                elif banking_type == 2:
                    amount = int(input("Enter the withdrawal amount: "))
                    if amount <= account["balance"]:
                        account["balance"] -= amount
                        cursor.execute("UPDATE accounts SET balance = ? WHERE user_id = ?", (account["balance"], account["user_id"]))
                        conn.commit()
                        print("Withdrawal successful. Updated balance:", account["balance"])
                    else:
                        print("Insufficient funds.")
                elif banking_type == 3:
                    print("Returning to the main menu.")
                    break
            else:
                print("Invalid choice. Please enter 1, 2, or 3.")
        except ValueError:
            print("Invalid input. Please enter a number.")

def user_selection():
    while True:
        try:
            print("Choose the Option")
            print("1. New User")
            print("2. Existing user")
            print("3. Exit")
            choice = int(input("Enter your user Type: "))
            if choice == 3:
                print("Thanks for Banking with us.")
                break  # Exit the program
            elif choice in [1, 2]:
                user_choice(choice)
            else:
                print("Invalid choice. Please enter 1, 2, or 3.")
        except ValueError:
            print("Invalid input. Please enter a number.")

    print("Thanks for using KAILASA BANK")
    print("Have a great day!")

def user_choice(choice):
    if choice == 1:
        print("Please Create the Account.")
        create_account()
    elif choice == 2:
        account = login()
        if account:
            print("Welcome back,", account["name"] + "!")
            while True:
                print("Choose an option:")
                print("1. View account details")
                print("2. Perform a transaction")
                print("3. Logout")
                option = input("Enter your choice: ")
                if option == "1":
                    print_account_details(account)
                elif option == "2":
                    banking(account)
                elif option == "3":
                    print("Logging out.")
                    break
                else:
                    print("Invalid option. Please try again.")
    elif choice == 3:
        print("Thanks for Banking with us.")
    else:
        print("Invalid choice. Please choose a valid option.")

if __name__ == "__main__":
    welcome_note()
    user_selection()

# Close the connection when the program exits
conn.close()
